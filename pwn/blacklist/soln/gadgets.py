# generated by braindead_gadgets.py

# common
RET                            = 0x80d69b8 # ret  ;

# flow
CALL_EAX                       = 0x80cb20f # call eax ;
CALL_EBP                       = 0x80d6277 # call ebp ;
CALL_EBX                       = 0x80caac7 # call ebx ;
CALL_ECX                       = 0x80d08f7 # call ecx ;
CALL_EDI                       = 0x80d1a63 # call edi ;
CALL_EDX                       = 0x80cf81f # call edx ;
CALL_ESI                       = 0x80c1d12 # call esi ;
CALL_ESP                       = 0x80d32e3 # call esp ;
JMP_EAX                        = 0x80c4a43 # jmp eax ;
JMP_EBP                        = 0x80ce4bf # jmp ebp ;
JMP_EBX                        = 0x80adf4b # jmp ebx ;
JMP_ECX                        = 0x80ae177 # jmp ecx ;
JMP_EDI                        = 0x80c984b # jmp edi ;
JMP_EDX                        = 0x80d0b5f # jmp edx ;
JMP_ESI                        = 0x80d0ed7 # jmp esi ;
JMP_ESP                        = 0x80d41b3 # jmp esp ;

# mem2reg
ADD_AH_BYTE_PTR_EAX_0XA_       = 0x80d4899 # add ah, byte ptr [eax + 0xa] ; ret  ;
ADD_AH_BYTE_PTR_EBX_0XA_       = 0x80d1a9d # add ah, byte ptr [ebx + 0xa] ; ret  ;
ADD_AH_BYTE_PTR_ECX_0XA_       = 0x80d063d # add ah, byte ptr [ecx + 0xa] ; ret  ;
ADD_AH_BYTE_PTR_EDI_0X41140E0A_ = 0x80caf10 # add ah, byte ptr [edi + 0x41140e0a] ; ret  ;
ADD_AL_BYTE_PTR_EAX_0X43140E0A_ = 0x80d6408 # add al, byte ptr [eax + 0x43140e0a] ; ret  ;
ADD_AL_BYTE_PTR_EAX_0XA_       = 0x80d5344 # add al, byte ptr [eax + 0xa] ; ret  ;
ADD_AL_BYTE_PTR_EBP_0XA_       = 0x80c7950 # add al, byte ptr [ebp + 0xa] ; ret  ;
ADD_AL_BYTE_PTR_EBP_0XC0B8A40_ = 0x8056e0f # add al, byte ptr [ebp - 0xc0b8a40] ; ret  ;
ADD_AL_BYTE_PTR_EBX_0X3C39383B__RET3264 = 0x80d5f40 # add al, byte ptr [ebx - 0x3c39383b] ; ret 0xcc0 ;
ADD_AL_BYTE_PTR_EBX_0X41140E0A_ = 0x80cd64f # add al, byte ptr [ebx + 0x41140e0a] ; ret  ;
ADD_AL_BYTE_PTR_EBX_0X5E5B01E8_ = 0x809f320 # add al, byte ptr [ebx + 0x5e5b01e8] ; ret  ;
ADD_AL_BYTE_PTR_EBX_0X5E5B04C4_ = 0x80a1254 # add al, byte ptr [ebx + 0x5e5b04c4] ; ret  ;
ADD_AL_BYTE_PTR_ECX_0X41080E0A_ = 0x80ce80d # add al, byte ptr [ecx + 0x41080e0a] ; ret  ;
ADD_AL_BYTE_PTR_ECX__RET38203  = 0x8079c73 # add al, byte ptr [ecx] ; ret 0x953b ;
ADD_AL_BYTE_PTR_EDI_0X41140E0A_ = 0x80cdec8 # add al, byte ptr [edi + 0x41140e0a] ; ret  ;
ADD_AL_BYTE_PTR_EDI_0XA_       = 0x80cf05c # add al, byte ptr [edi + 0xa] ; ret  ;
ADD_AL_BYTE_PTR_ESI_0X43140E0A_ = 0x80d346f # add al, byte ptr [esi + 0x43140e0a] ; ret  ;
ADD_BH_BYTE_PTR_EAX_0X410C0E0A_ = 0x80d1a76 # add bh, byte ptr [eax + 0x410c0e0a] ; ret  ;
ADD_BH_BYTE_PTR_EAX_0XA_       = 0x80d1be0 # add bh, byte ptr [eax + 0xa] ; ret  ;
ADD_BH_BYTE_PTR_ECX_0X41140E0A_ = 0x80cf794 # add bh, byte ptr [ecx + 0x41140e0a] ; ret  ;
ADD_BH_BYTE_PTR_ECX__RET34063  = 0x8088d49 # add bh, byte ptr [ecx] ; ret 0x850f ;
ADD_BH_BYTE_PTR_ECX__RET34319  = 0x8097c66 # add bh, byte ptr [ecx] ; ret 0x860f ;
ADD_BH_BYTE_PTR_ECX__RET35855  = 0x8085386 # add bh, byte ptr [ecx] ; ret 0x8c0f ;
ADD_BH_BYTE_PTR_EDI_0X43140E0A_ = 0x80c87d4 # add bh, byte ptr [edi + 0x43140e0a] ; ret  ;
ADD_BH_BYTE_PTR_EDI_0XA_       = 0x80d40d9 # add bh, byte ptr [edi + 0xa] ; ret  ;
ADD_BH_BYTE_PTR_ESI_0XA_       = 0x80d10f3 # add bh, byte ptr [esi + 0xa] ; ret  ;
ADD_BH_BYTE_PTR_ESI_ECX_4_     = 0x80ca21f # add bh, byte ptr [esi + ecx + 4] ; ret  ;
ADD_BL_BYTE_PTR_EAX_0XA_       = 0x80cb5ed # add bl, byte ptr [eax + 0xa] ; ret  ;
ADD_BL_BYTE_PTR_EBX_0X5E_      = 0x8057220 # add bl, byte ptr [ebx + 0x5e] ; ret  ;
ADD_BL_BYTE_PTR_ECX_0X41140E0A_ = 0x80d5ae1 # add bl, byte ptr [ecx + 0x41140e0a] ; ret  ;
ADD_BL_BYTE_PTR_ESI_0X5F_      = 0x80a4afa # add bl, byte ptr [esi + 0x5f] ; ret  ;
ADD_BL_BYTE_PTR_ESI_0XA_       = 0x80d65bd # add bl, byte ptr [esi + 0xa] ; ret  ;
ADD_BL_BYTE_PTR_ESI_EBP_0XA440210_ = 0x80cfd9c # add bl, byte ptr [esi + ebp + 0xa440210] ; ret  ;
ADD_CH_BYTE_PTR_EAX_0X41140E0A_ = 0x80cb12e # add ch, byte ptr [eax + 0x41140e0a] ; ret  ;
ADD_CH_BYTE_PTR_EBP_0X45140E0A_ = 0x80d641f # add ch, byte ptr [ebp + 0x45140e0a] ; ret  ;
ADD_CH_BYTE_PTR_EBP_EBP_2_0X5B__RET1785 = 0x80c39f9 # add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9 ;
ADD_CH_BYTE_PTR_ECX_0X41140E0A_ = 0x80cf7e8 # add ch, byte ptr [ecx + 0x41140e0a] ; ret  ;
ADD_CH_BYTE_PTR_ECX__RET184    = 0x808c4de # add ch, byte ptr [ecx] ; ret 0xb8 ;
ADD_CH_BYTE_PTR_ECX__RET34187  = 0x808ca86 # add ch, byte ptr [ecx] ; ret 0x858b ;
ADD_CH_BYTE_PTR_ECX__RET50433  = 0x8059712 # add ch, byte ptr [ecx] ; ret 0xc501 ;
ADD_CH_BYTE_PTR_ECX__RET64193  = 0x8084bd1 # add ch, byte ptr [ecx] ; ret 0xfac1 ;
ADD_CH_BYTE_PTR_EDI_0X43140E0A_ = 0x80c5868 # add ch, byte ptr [edi + 0x43140e0a] ; ret  ;
ADD_CH_BYTE_PTR_ESI_0XA_       = 0x80d145e # add ch, byte ptr [esi + 0xa] ; ret  ;
ADD_CL_BYTE_PTR_EAX_0X2F76F7BE_ = 0x8064a4a # add cl, byte ptr [eax - 0x2f76f7be] ; ret  ;
ADD_CL_BYTE_PTR_EAX_0X2F76FDBE_ = 0x8066838 # add cl, byte ptr [eax - 0x2f76fdbe] ; ret  ;
ADD_CL_BYTE_PTR_EBP_0XA_       = 0x80cc0ed # add cl, byte ptr [ebp + 0xa] ; ret  ;
ADD_CL_BYTE_PTR_ECX_0X2F76F7BE_ = 0x8064aaa # add cl, byte ptr [ecx - 0x2f76f7be] ; ret  ;
ADD_CL_BYTE_PTR_ECX_0X2F76F8BE_ = 0x8064a8a # add cl, byte ptr [ecx - 0x2f76f8be] ; ret  ;
ADD_CL_BYTE_PTR_ECX_0X41140E0A_ = 0x80c6629 # add cl, byte ptr [ecx + 0x41140e0a] ; ret  ;
ADD_CL_BYTE_PTR_ECX_0X7C3E7631__RET3841 = 0x80969dc # add cl, byte ptr [ecx - 0x7c3e7631] ; ret 0xf01 ;
ADD_CL_BYTE_PTR_ECX_0X9FBDB8C__RET4031 = 0x804d75e # add cl, byte ptr [ecx - 0x9fbdb8c] ; ret 0xfbf ;
ADD_CL_BYTE_PTR_ECX_0XA_       = 0x80c80fb # add cl, byte ptr [ecx + 0xa] ; ret  ;
ADD_CL_BYTE_PTR_EDI_0X41140E0A_ = 0x80d3b3e # add cl, byte ptr [edi + 0x41140e0a] ; ret  ;
ADD_CL_BYTE_PTR_EDI_0XA_       = 0x80cfc51 # add cl, byte ptr [edi + 0xa] ; ret  ;
ADD_CL_BYTE_PTR_EDX_           = 0x80d2d1e # add cl, byte ptr [edx] ; ret  ;
ADD_CL_BYTE_PTR_EDX_0XA_       = 0x80ce552 # add cl, byte ptr [edx + 0xa] ; ret  ;
ADD_DH_BYTE_PTR_EAX_           = 0x806824c # add dh, byte ptr [eax] ; ret  ;
ADD_DH_BYTE_PTR_EBP_0XA_       = 0x80cce5c # add dh, byte ptr [ebp + 0xa] ; ret  ;
ADD_DH_BYTE_PTR_EDI_0X43140E0A_ = 0x80d5ec5 # add dh, byte ptr [edi + 0x43140e0a] ; ret  ;
ADD_DH_BYTE_PTR_EDI_0XA_       = 0x80cfe38 # add dh, byte ptr [edi + 0xa] ; ret  ;
ADD_DH_BYTE_PTR_EDX_0X41140E0A_ = 0x80c8d2c # add dh, byte ptr [edx + 0x41140e0a] ; ret  ;
ADD_DH_BYTE_PTR_EDX_0XA_       = 0x80c7ee5 # add dh, byte ptr [edx + 0xa] ; ret  ;
ADD_DL_BYTE_PTR_EAX_0X7D__RET36104 = 0x8084b63 # add dl, byte ptr [eax - 0x7d] ; ret 0x8d08 ;
ADD_DL_BYTE_PTR_EAX_0XA_       = 0x80d4db8 # add dl, byte ptr [eax + 0xa] ; ret  ;
ADD_DL_BYTE_PTR_EBP_0XA_       = 0x80cec40 # add dl, byte ptr [ebp + 0xa] ; ret  ;
ADD_DL_BYTE_PTR_ECX_0X41140E0A_ = 0x80d5b3e # add dl, byte ptr [ecx + 0x41140e0a] ; ret  ;
ADD_DL_BYTE_PTR_EDI_0X41140E0A_ = 0x80ceca4 # add dl, byte ptr [edi + 0x41140e0a] ; ret  ;
ADD_DL_BYTE_PTR_ESI_0X41140E0A_ = 0x80d4228 # add dl, byte ptr [esi + 0x41140e0a] ; ret  ;
ADD_DL_BYTE_PTR_ESI_0XA_       = 0x80cc019 # add dl, byte ptr [esi + 0xa] ; ret  ;
ADD_EAX_DWORD_PTR_0_           = 0x807c6c1 # add eax, dword ptr [0] ; ret  ;
ADD_EAX_DWORD_PTR_EBP_0X5BD475DB_ = 0x8093077 # add eax, dword ptr [ebp + 0x5bd475db] ; ret  ;
ADD_EAX_DWORD_PTR_EBX_0XA540204_ = 0x80d403f # add eax, dword ptr [ebx + 0xa540204] ; ret  ;
ADD_EAX_DWORD_PTR_EBX__RET3585 = 0x80cf61a # add eax, dword ptr [ebx] ; ret 0xe01 ;
ADD_EAX_DWORD_PTR_ECX_EAX_0X41140E0A_ = 0x80cd45d # add eax, dword ptr [ecx + eax + 0x41140e0a] ; ret  ;
ADD_EAX_DWORD_PTR_EDX_0XC0E5F04__RET3649 = 0x80cbec1 # add eax, dword ptr [edx + 0xc0e5f04] ; ret 0xe41 ;
ADD_EAX_DWORD_PTR_ESI_0X3058304_ = 0x80d4d07 # add eax, dword ptr [esi + 0x3058304] ; ret  ;
ADD_EAX_DWORD_PTR_ESP_         = 0x80a4680 # add eax, dword ptr [esp] ; ret  ;
ADD_EAX_DWORD_PTR_GS_0_        = 0x807c6c0 # add eax, dword ptr gs:[0] ; ret  ;
ADD_EBP_DWORD_PTR_EBX_0XA_     = 0x80d18b2 # add ebp, dword ptr [ebx + 0xa] ; ret  ;
ADD_EBP_DWORD_PTR_ECX__RET60097 = 0x807932f # add ebp, dword ptr [ecx] ; ret 0xeac1 ;
ADD_EBP_DWORD_PTR_ESI_0XA_     = 0x80cf1b2 # add ebp, dword ptr [esi + 0xa] ; ret  ;
ADD_EBX_DWORD_PTR_ESI_0X5F_    = 0x80925d5 # add ebx, dword ptr [esi + 0x5f] ; ret  ;
ADD_ECX_DWORD_PTR_EBP_0X5F5E0346_ = 0x80925d2 # add ecx, dword ptr [ebp + 0x5f5e0346] ; ret  ;
ADD_ECX_DWORD_PTR_EBP_2_       = 0x80d4e56 # add ecx, dword ptr [ebp + 2] ; ret  ;
ADD_ECX_DWORD_PTR_ECX_0X2F76FCBE_ = 0x8066876 # add ecx, dword ptr [ecx - 0x2f76fcbe] ; ret  ;
ADD_ECX_DWORD_PTR_ECX_0X5F5E5BF0_ = 0x808373a # add ecx, dword ptr [ecx + 0x5f5e5bf0] ; ret  ;
ADD_ECX_DWORD_PTR_EDX_         = 0x80d2b02 # add ecx, dword ptr [edx] ; ret  ;
ADD_EDI_DWORD_PTR_ECX__RET20239 = 0x804f842 # add edi, dword ptr [ecx] ; ret 0x4f0f ;
ADD_EDI_DWORD_PTR_EDI_0XA_     = 0x80d05ce # add edi, dword ptr [edi + 0xa] ; ret  ;
ADD_ESI_DWORD_PTR_EAX_0XA_     = 0x80c82a2 # add esi, dword ptr [eax + 0xa] ; ret  ;
ADD_ESI_DWORD_PTR_EBX_0XA_     = 0x80d3ab2 # add esi, dword ptr [ebx + 0xa] ; ret  ;
ADD_ESP_DWORD_PTR_ESI_0X2102E04_ = 0x80c636f # add esp, dword ptr [esi + 0x2102e04] ; ret  ;
ADD_ESP_DWORD_PTR_ESI_EAX_0XA_ = 0x80d53a8 # add esp, dword ptr [esi + eax + 0xa] ; ret  ;
AND_CL_BYTE_PTR_EBX_0X76CBDBBC__RET28813 = 0x808f05e # and cl, byte ptr [ebx - 0x76cbdbbc] ; ret 0x708d ;
MOV_AL_BYTE_PTR_0X9066080D_    = 0x804823b # mov al, byte ptr [0x9066080d] ; ret  ;
MOV_AL_BYTE_PTR_0XC7000014__RET45952 = 0x80527c6 # mov al, byte ptr [0xc7000014] ; ret 0xb380 ;
MOV_AL_BYTE_PTR_0XC708478B__RET44328 = 0x80ac21a # mov al, byte ptr [0xc708478b] ; ret 0xad28 ;
MOV_AL_BYTE_PTR_0XF6000013__RET3904 = 0x8086a33 # mov al, byte ptr [0xf6000013] ; ret 0xf40 ;
MOV_DS_WORD_PTR_EAX_0X39000000__RET45760 = 0x807e453 # mov ds, word ptr [eax - 0x39000000] ; ret 0xb2c0 ;
MOV_EAX_DWORD_PTR_0X81FFFF27__RET49547 = 0x805de71 # mov eax, dword ptr [0x81ffff27] ; ret 0xc18b ;
MOV_EAX_DWORD_PTR_EAX_         = 0x80a1a00 # mov eax, dword ptr [eax] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X1C74_  = 0x80798ea # mov eax, dword ptr [eax + 0x1c74] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X229C_  = 0x8071e5a # mov eax, dword ptr [eax + 0x229c] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X22A4_  = 0x8071e7a # mov eax, dword ptr [eax + 0x22a4] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X28_    = 0x80902a7 # mov eax, dword ptr [eax + 0x28] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X34_    = 0x8057114 # mov eax, dword ptr [eax + 0x34] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X48_    = 0x80a8cb4 # mov eax, dword ptr [eax + 0x48] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X4C_    = 0x80a8d24 # mov eax, dword ptr [eax + 0x4c] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X50_    = 0x80a8d64 # mov eax, dword ptr [eax + 0x50] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X54_    = 0x80a8dd4 # mov eax, dword ptr [eax + 0x54] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X58_    = 0x80a8dc4 # mov eax, dword ptr [eax + 0x58] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_0X5C_    = 0x80a8d74 # mov eax, dword ptr [eax + 0x5c] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_4_       = 0x809e990 # mov eax, dword ptr [eax + 4] ; ret  ;
MOV_EAX_DWORD_PTR_EAX_EDX_4_0X40_ = 0x807c65e # mov eax, dword ptr [eax + edx*4 + 0x40] ; ret  ;
MOV_EAX_DWORD_PTR_EDX_0X4C_    = 0x80a8d40 # mov eax, dword ptr [edx + 0x4c] ; ret  ;
MOV_EAX_DWORD_PTR_ESP_         = 0x8049312 # mov eax, dword ptr [esp] ; ret  ;
MOV_EAX_DWORD_PTR_ESP_4_       = 0x806b401 # mov eax, dword ptr [esp + 4] ; ret  ;
MOV_EAX_DWORD_PTR_ESP_4__RET12 = 0x809dcc7 # mov eax, dword ptr [esp + 4] ; ret 0xc ;
MOV_EAX_DWORD_PTR_ESP_4__RET20 = 0x809dd0e # mov eax, dword ptr [esp + 4] ; ret 0x14 ;
MOV_EBP_DWORD_PTR_ESP_         = 0x8049316 # mov ebp, dword ptr [esp] ; ret  ;
MOV_EBX_DWORD_PTR_ESP_         = 0x8048780 # mov ebx, dword ptr [esp] ; ret  ;
MOV_ECX_DWORD_PTR_ESP_         = 0x80550a2 # mov ecx, dword ptr [esp] ; ret  ;
MOV_EDI_DWORD_PTR_EDX_         = 0x80c1cc6 # mov edi, dword ptr [edx] ; ret  ;
MOV_EDI_DWORD_PTR_ESP_         = 0x804cec3 # mov edi, dword ptr [esp] ; ret  ;
MOV_EDX_DWORD_PTR_ESP_         = 0x8050616 # mov edx, dword ptr [esp] ; ret  ;
MOV_ESI_DWORD_PTR_ESP_         = 0x8049659 # mov esi, dword ptr [esp] ; ret  ;
OR_AL_BYTE_PTR_EBX_0X5E5B04C4_ = 0x808f919 # or al, byte ptr [ebx + 0x5e5b04c4] ; ret  ;
OR_BH_BYTE_PTR_ECX_            = 0x80a3a47 # or bh, byte ptr [ecx] ; ret  ;
OR_BL_BYTE_PTR_EBX_0X5E_       = 0x8093d71 # or bl, byte ptr [ebx + 0x5e] ; ret  ;
OR_CH_BYTE_PTR_ECX_            = 0x808982e # or ch, byte ptr [ecx] ; ret  ;
OR_CL_BYTE_PTR_0X4108_         = 0x80cb56d # or cl, byte ptr [0x4108] ; ret  ;
OR_CL_BYTE_PTR_0X4114_         = 0x80d5d5e # or cl, byte ptr [0x4114] ; ret  ;
OR_CL_BYTE_PTR_0X4314_         = 0x80d4d45 # or cl, byte ptr [0x4314] ; ret  ;
OR_CL_BYTE_PTR_EDX_            = 0x80cef56 # or cl, byte ptr [edx] ; ret  ;
OR_EAX_DWORD_PTR_EBX_0X5E5B04C4_ = 0x807a08c # or eax, dword ptr [ebx + 0x5e5b04c4] ; ret  ;
OR_EAX_DWORD_PTR_EBX_0XA_      = 0x80d14cb # or eax, dword ptr [ebx + 0xa] ; ret  ;
OR_EAX_DWORD_PTR_EBX__RET2561  = 0x80c5e66 # or eax, dword ptr [ebx] ; ret 0xa01 ;
OR_EAX_DWORD_PTR_ECX_0XA_      = 0x80d4777 # or eax, dword ptr [ecx + 0xa] ; ret  ;
OR_EAX_DWORD_PTR_EDI_0XA_      = 0x80c6bb2 # or eax, dword ptr [edi + 0xa] ; ret  ;
OR_EAX_DWORD_PTR_ESI_0X3F38FFFD__RET2061 = 0x80a19f6 # or eax, dword ptr [esi - 0x3f38fffd] ; ret 0x80d ;
OR_EAX_DWORD_PTR_ESI_0XA_      = 0x80d14d2 # or eax, dword ptr [esi + 0xa] ; ret  ;
OR_EBP_DWORD_PTR_EAX_0XA_      = 0x80c79ef # or ebp, dword ptr [eax + 0xa] ; ret  ;
OR_EBX_DWORD_PTR_ECX_0XA_      = 0x80cf0a7 # or ebx, dword ptr [ecx + 0xa] ; ret  ;
OR_EBX_DWORD_PTR_EDI_0XA_      = 0x80c628d # or ebx, dword ptr [edi + 0xa] ; ret  ;
OR_EBX_DWORD_PTR_ESI_0XA_      = 0x80d4764 # or ebx, dword ptr [esi + 0xa] ; ret  ;
OR_ECX_DWORD_PTR_EAX_0XA_      = 0x80d10fe # or ecx, dword ptr [eax + 0xa] ; ret  ;
OR_ECX_DWORD_PTR_EBP_0XA_      = 0x80c90d3 # or ecx, dword ptr [ebp + 0xa] ; ret  ;
OR_ECX_DWORD_PTR_EDI_0XA_      = 0x80d40ec # or ecx, dword ptr [edi + 0xa] ; ret  ;
OR_ECX_DWORD_PTR_EDX_0XA_      = 0x80d4b8b # or ecx, dword ptr [edx + 0xa] ; ret  ;
OR_EDI_DWORD_PTR_EAX_0XA_      = 0x80cec4f # or edi, dword ptr [eax + 0xa] ; ret  ;
OR_EDX_DWORD_PTR_ECX_0XA_      = 0x80d5bf2 # or edx, dword ptr [ecx + 0xa] ; ret  ;
OR_EDX_DWORD_PTR_ESI_0X38ACFFFC_ = 0x80909f7 # or edx, dword ptr [esi - 0x38acfffc] ; ret  ;
OR_ESP_DWORD_PTR_EAX_0XA_      = 0x80cec5e # or esp, dword ptr [eax + 0xa] ; ret  ;
OR_ESP_DWORD_PTR_EBP_0XA_      = 0x80c799b # or esp, dword ptr [ebp + 0xa] ; ret  ;
SUB_EAX_DWORD_PTR_0_           = 0x809e9a4 # sub eax, dword ptr [0] ; ret  ;
SUB_EAX_DWORD_PTR_EDX_         = 0x807ba6a # sub eax, dword ptr [edx] ; ret  ;
SUB_EAX_DWORD_PTR_EDX_0XC_     = 0x8057aae # sub eax, dword ptr [edx + 0xc] ; ret  ;
SUB_EAX_DWORD_PTR_EDX_8_       = 0x8056e3b # sub eax, dword ptr [edx + 8] ; ret  ;
SUB_EAX_DWORD_PTR_ESP_4_       = 0x806b906 # sub eax, dword ptr [esp + 4] ; ret  ;
SUB_EAX_DWORD_PTR_GS_0_        = 0x809e9a3 # sub eax, dword ptr gs:[0] ; ret  ;

# misc
LEAVE                          = 0x80a91cf # leave  ; ret  ;

# popreg
POP_DS_EBX_ESI_EDI             = 0x809f7f2 # pop ds ; pop ebx ; pop esi ; pop edi ; ret  ;
POP_EAX                        = 0x80a8dc6 # pop eax ; ret  ;
POP_EAX_EBX_ESI_EDI            = 0x809f7ea # pop eax ; pop ebx ; pop esi ; pop edi ; ret  ;
POP_EAX_EDX_EBX                = 0x8056324 # pop eax ; pop edx ; pop ebx ; ret  ;
POP_EAX_RET2061                = 0x806ff3f # pop eax ; ret 0x80d ;
POP_EBP                        = 0x80ac344 # pop ebp ; ret  ;
POP_EBP_EBX_ESI_EDI            = 0x806b6ad # pop ebp ; pop ebx ; pop esi ; pop edi ; ret  ;
POP_EBP_ESI_EDI                = 0x80a4768 # pop ebp ; pop esi ; pop edi ; ret  ;
POP_EBP_RET4                   = 0x805d942 # pop ebp ; ret 4 ;
POP_EBP_RET8                   = 0x80a1d49 # pop ebp ; ret 8 ;
POP_EBX                        = 0x80ac38e # pop ebx ; ret  ;
POP_EBX_EBP_ESI_EDI            = 0x80a4767 # pop ebx ; pop ebp ; pop esi ; pop edi ; ret  ;
POP_EBX_EDX                    = 0x806f0eb # pop ebx ; pop edx ; ret  ;
POP_EBX_ESI                    = 0x80abb83 # pop ebx ; pop esi ; ret  ;
POP_EBX_ESI_EBP                = 0x80a050b # pop ebx ; pop esi ; pop ebp ; ret  ;
POP_EBX_ESI_EDI                = 0x80ac0af # pop ebx ; pop esi ; pop edi ; ret  ;
POP_EBX_ESI_EDI_EBP            = 0x80ac341 # pop ebx ; pop esi ; pop edi ; pop ebp ; ret  ;
POP_EBX_ESI_EDI_EBP_RET4       = 0x805d93f # pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4 ;
POP_EBX_ESI_EDI_EBP_RET8       = 0x80a1cd8 # pop ebx ; pop esi ; pop edi ; pop ebp ; ret 8 ;
POP_EBX_RET1785                = 0x80c39fc # pop ebx ; ret 0x6f9 ;
POP_ECX_EBX                    = 0x806f112 # pop ecx ; pop ebx ; ret  ;
POP_EDI                        = 0x80ce76e # pop edi ; ret  ;
POP_EDI_EBP                    = 0x80ac343 # pop edi ; pop ebp ; ret  ;
POP_EDI_EBP_RET4               = 0x805d941 # pop edi ; pop ebp ; ret 4 ;
POP_EDI_EBP_RET8               = 0x80a1d48 # pop edi ; pop ebp ; ret 8 ;
POP_EDI_EBX                    = 0x806ab69 # pop edi ; pop ebx ; ret  ;
POP_EDI_ESI                    = 0x806b0b8 # pop edi ; pop esi ; ret  ;
POP_EDI_ESI_EBX                = 0x806229a # pop edi ; pop esi ; pop ebx ; ret  ;
POP_EDX                        = 0x806f0ec # pop edx ; ret  ;
POP_EDX_EBX                    = 0x8056325 # pop edx ; pop ebx ; ret  ;
POP_EDX_ECX_EBX                = 0x806f111 # pop edx ; pop ecx ; pop ebx ; ret  ;
POP_EDX_RET3                   = 0x809dda8 # pop edx ; ret 3 ;
POP_ES                         = 0x8067f5a # pop es ; ret  ;
POP_ESI                        = 0x80abb84 # pop esi ; ret  ;
POP_ESI_EBP                    = 0x80a050c # pop esi ; pop ebp ; ret  ;
POP_ESI_EBX                    = 0x806b390 # pop esi ; pop ebx ; ret  ;
POP_ESI_EBX_EDX                = 0x806f0ea # pop esi ; pop ebx ; pop edx ; ret  ;
POP_ESI_EDI                    = 0x80ac0b0 # pop esi ; pop edi ; ret  ;
POP_ESI_EDI_EBP                = 0x80ac342 # pop esi ; pop edi ; pop ebp ; ret  ;
POP_ESI_EDI_EBP_RET4           = 0x805d940 # pop esi ; pop edi ; pop ebp ; ret 4 ;
POP_ESI_EDI_EBP_RET8           = 0x80a1d47 # pop esi ; pop edi ; pop ebp ; ret 8 ;
POP_ESI_EDI_EBX                = 0x806ab3d # pop esi ; pop edi ; pop ebx ; ret  ;
POP_ESP                        = 0x80a8d76 # pop esp ; ret  ;
POP_ESP_RET2061                = 0x80ac1e5 # pop esp ; ret 0x80d ;
POP_ESP_RET35640               = 0x805aec8 # pop esp ; ret 0x8b38 ;
POP_ES_EDI                     = 0x80922c0 # pop es ; pop edi ; ret  ;
POP_SS                         = 0x8052f55 # pop ss ; ret  ;
POP_SS_RET11379                = 0x8062879 # pop ss ; ret 0x2c73 ;
POP_SS_RET12915                = 0x806323a # pop ss ; ret 0x3273 ;
POP_SS_RET15987                = 0x8062864 # pop ss ; ret 0x3e73 ;
POP_SS_RET19571                = 0x8063220 # pop ss ; ret 0x4c73 ;
POP_SS_RET20595                = 0x806284f # pop ss ; ret 0x5073 ;
POP_SS_RET25203                = 0x806283a # pop ss ; ret 0x6273 ;
POP_SS_RET26227                = 0x8063206 # pop ss ; ret 0x6673 ;
POP_SS_RET33551                = 0x806a90c # pop ss ; ret 0x830f ;

# pushreg
PUSH_0X80DB280_CALL_EAX        = 0x80487ab # push 0x80db280 ; call eax ;
PUSH_0X80DB280_CALL_EDX        = 0x80487f8 # push 0x80db280 ; call edx ;
PUSH_1_CALL_EAX                = 0x80a9232 # push 1 ; call eax ;
PUSH_CS_CALL_ECX               = 0x806b464 # push cs ; call ecx ;
PUSH_DWORD_PTR_EAX_4__CALL_EDI = 0x8071c7f # push dword ptr [eax + 4] ; call edi ;
PUSH_DWORD_PTR_EBP_0X80__CALL_EAX = 0x8085123 # push dword ptr [ebp - 0x80] ; call eax ;
PUSH_DWORD_PTR_EBP_0X890__CALL_EAX = 0x807eb20 # push dword ptr [ebp - 0x890] ; call eax ;
PUSH_DWORD_PTR_EBP_0X8A0__CALL_EAX = 0x8088cb0 # push dword ptr [ebp - 0x8a0] ; call eax ;
PUSH_DWORD_PTR_EBP_8__CALL_ESI = 0x80929be # push dword ptr [ebp + 8] ; call esi ;
PUSH_DWORD_PTR_EBP__CALL_EDI   = 0x8092780 # push dword ptr [ebp] ; call edi ;
PUSH_DWORD_PTR_EBP__CALL_ESI   = 0x8092836 # push dword ptr [ebp] ; call esi ;
PUSH_DWORD_PTR_ESI_4__CALL_EDI = 0x8071ce3 # push dword ptr [esi + 4] ; call edi ;
PUSH_DWORD_PTR_ESI__CALL_EDI   = 0x806df44 # push dword ptr [esi] ; call edi ;
PUSH_DWORD_PTR_ESP_0X14__CALL_EBP = 0x807cc2d # push dword ptr [esp + 0x14] ; call ebp ;
PUSH_DWORD_PTR_ESP_0X20__CALL_EBP = 0x807cbfa # push dword ptr [esp + 0x20] ; call ebp ;
PUSH_DWORD_PTR_ESP_0X34__CALL_EDI = 0x8092cb3 # push dword ptr [esp + 0x34] ; call edi ;
PUSH_DWORD_PTR_ESP_0X34__CALL_ESI = 0x806c733 # push dword ptr [esp + 0x34] ; call esi ;
PUSH_DWORD_PTR_ESP_0X48__CALL_EDI = 0x807963e # push dword ptr [esp + 0x48] ; call edi ;
PUSH_DWORD_PTR_ESP_0X48__CALL_ESI = 0x8073fab # push dword ptr [esp + 0x48] ; call esi ;
PUSH_DWORD_PTR_ESP_0X4C__CALL_EBP = 0x80746b9 # push dword ptr [esp + 0x4c] ; call ebp ;
PUSH_DWORD_PTR_ESP_0X4C__CALL_ESI = 0x807484b # push dword ptr [esp + 0x4c] ; call esi ;
PUSH_DWORD_PTR_ESP_0X50__CALL_EDI = 0x8075139 # push dword ptr [esp + 0x50] ; call edi ;
PUSH_DWORD_PTR_ESP_0X54__CALL_EDI = 0x807883b # push dword ptr [esp + 0x54] ; call edi ;
PUSH_DWORD_PTR_ESP_0X58__CALL_EDI = 0x807803f # push dword ptr [esp + 0x58] ; call edi ;
PUSH_DWORD_PTR_ESP_0X5C__CALL_EDI = 0x8074d5b # push dword ptr [esp + 0x5c] ; call edi ;
PUSH_DWORD_PTR_ESP_0X60__CALL_EDI = 0x8078f30 # push dword ptr [esp + 0x60] ; call edi ;
PUSH_DWORD_PTR_ESP_0X6C__CALL_EBP = 0x8076785 # push dword ptr [esp + 0x6c] ; call ebp ;
PUSH_DWORD_PTR_ESP_0X6C__CALL_EDI = 0x8076cde # push dword ptr [esp + 0x6c] ; call edi ;
PUSH_EAX_CALL_EAX              = 0x8078b73 # push eax ; call eax ;
PUSH_EAX_CALL_EDI              = 0x807513c # push eax ; call edi ;
PUSH_EAX_CALL_EDX              = 0x80abf12 # push eax ; call edx ;
PUSH_EAX_CALL_ESI              = 0x8090415 # push eax ; call esi ;
PUSH_EBP_CALL_EAX              = 0x805d357 # push ebp ; call eax ;
PUSH_EBP_CALL_EDI              = 0x80aa176 # push ebp ; call edi ;
PUSH_EBP_CALL_ESI              = 0x8090500 # push ebp ; call esi ;
PUSH_EBX_CALL_EAX              = 0x80a593c # push ebx ; call eax ;
PUSH_EBX_CALL_EBP              = 0x807cced # push ebx ; call ebp ;
PUSH_EBX_CALL_EBX              = 0x80a0a00 # push ebx ; call ebx ;
PUSH_EBX_CALL_EDX              = 0x806deed # push ebx ; call edx ;
PUSH_EBX_CALL_ESI              = 0x806decf # push ebx ; call esi ;
PUSH_ECX_CALL_EDI              = 0x80905ed # push ecx ; call edi ;
PUSH_EDI_CALL_EBP              = 0x807cd9a # push edi ; call ebp ;
PUSH_EDI_CALL_ESI              = 0x806e267 # push edi ; call esi ;
PUSH_ESI_CALL_EAX              = 0x808df1b # push esi ; call eax ;
PUSH_ESI_CALL_EBP              = 0x807cf5c # push esi ; call ebp ;
PUSH_ESI_CALL_ECX              = 0x805360e # push esi ; call ecx ;
PUSH_ESI_CALL_EDX              = 0x808e557 # push esi ; call edx ;
PUSH_ESP_CALL_EDI              = 0x807883e # push esp ; call edi ;

# reg2mem
ADD_BYTE_PTR_EAX_0X14BFF3B2_AL_RET30349 = 0x808e19f # add byte ptr [eax - 0x14bff3b2], al ; ret 0x768d ;
ADD_BYTE_PTR_EAX_0X450FF0E5_AL_RET26601 = 0x806ba8f # add byte ptr [eax + 0x450ff0e5], al ; ret 0x67e9 ;
ADD_BYTE_PTR_EAX_1_BH          = 0x8092fbf # add byte ptr [eax + 1], bh ; ret  ;
ADD_BYTE_PTR_EAX_1_BH          = 0x809027f # add byte ptr [eax - 1], bh ; ret  ;
ADD_BYTE_PTR_EAX_2_BH          = 0x8092fcf # add byte ptr [eax + 2], bh ; ret  ;
ADD_BYTE_PTR_EAX_3_BH          = 0x8092fdf # add byte ptr [eax + 3], bh ; ret  ;
ADD_BYTE_PTR_EAX_4_BH          = 0x8092fef # add byte ptr [eax + 4], bh ; ret  ;
ADD_BYTE_PTR_EAX_5_BH          = 0x8092fff # add byte ptr [eax + 5], bh ; ret  ;
ADD_BYTE_PTR_EAX_6_BH          = 0x809300f # add byte ptr [eax + 6], bh ; ret  ;
ADD_BYTE_PTR_EAX_7_BH          = 0x809301f # add byte ptr [eax + 7], bh ; ret  ;
ADD_BYTE_PTR_EAX_AL            = 0x80c0186 # add byte ptr [eax], al ; ret  ;
ADD_BYTE_PTR_EAX_AL_RET0       = 0x80c0182 # add byte ptr [eax], al ; ret 0 ;
ADD_BYTE_PTR_EAX_AL_RET1       = 0x80bb402 # add byte ptr [eax], al ; ret 1 ;
ADD_BYTE_PTR_EAX_AL_RET10      = 0x80b7b5e # add byte ptr [eax], al ; ret 0xa ;
ADD_BYTE_PTR_EAX_AL_RET13      = 0x80b7f5e # add byte ptr [eax], al ; ret 0xd ;
ADD_BYTE_PTR_EAX_AL_RET16      = 0x80b835e # add byte ptr [eax], al ; ret 0x10 ;
ADD_BYTE_PTR_EAX_AL_RET2       = 0x80bb602 # add byte ptr [eax], al ; ret 2 ;
ADD_BYTE_PTR_EAX_AL_RET3       = 0x80bb802 # add byte ptr [eax], al ; ret 3 ;
ADD_BYTE_PTR_EAX_AL_RET36      = 0x80b9036 # add byte ptr [eax], al ; ret 0x24 ;
ADD_BYTE_PTR_EAX_AL_RET4       = 0x80bba02 # add byte ptr [eax], al ; ret 4 ;
ADD_BYTE_PTR_EAX_AL_RET468     = 0x80ba02e # add byte ptr [eax], al ; ret 0x1d4 ;
ADD_BYTE_PTR_EAX_AL_RET469     = 0x80ba7c6 # add byte ptr [eax], al ; ret 0x1d5 ;
ADD_BYTE_PTR_EAX_AL_RET5       = 0x80bbc02 # add byte ptr [eax], al ; ret 5 ;
ADD_BYTE_PTR_EAX_AL_RET51      = 0x80b9526 # add byte ptr [eax], al ; ret 0x33 ;
ADD_BYTE_PTR_EAX_AL_RET6       = 0x80bbe02 # add byte ptr [eax], al ; ret 6 ;
ADD_BYTE_PTR_EAX_AL_RET7       = 0x80bc002 # add byte ptr [eax], al ; ret 7 ;
ADD_BYTE_PTR_EAX_AL_RET8       = 0x80bc202 # add byte ptr [eax], al ; ret 8 ;
ADD_BYTE_PTR_EAX_AL_RET9       = 0x80bc402 # add byte ptr [eax], al ; ret 9 ;
ADD_BYTE_PTR_EAX_BH            = 0x806f5bf # add byte ptr [eax], bh ; ret  ;
ADD_BYTE_PTR_EBP_0X38728A0A_AL_RET0 = 0x80a104f # add byte ptr [ebp - 0x38728a0a], al ; ret 0 ;
ADD_BYTE_PTR_EBP_0X389B8B40_AL_RET49784 = 0x8049427 # add byte ptr [ebp - 0x389b8b40], al ; ret 0xc278 ;
ADD_BYTE_PTR_EBP_0X38DE8B0A_AL_RET30960 = 0x80abdea # add byte ptr [ebp - 0x38de8b0a], al ; ret 0x78f0 ;
ADD_BYTE_PTR_EBP_0X38DE8B2E_AL_RET30960 = 0x80abe40 # add byte ptr [ebp - 0x38de8b2e], al ; ret 0x78f0 ;
ADD_BYTE_PTR_EBP_0X38DE8B37_AL_RET30960 = 0x80abe15 # add byte ptr [ebp - 0x38de8b37], al ; ret 0x78f0 ;
ADD_BYTE_PTR_EBP_0X38DE8B40_AL_RET30960 = 0x80abe6b # add byte ptr [ebp - 0x38de8b40], al ; ret 0x78f0 ;
ADD_BYTE_PTR_EBP_0X38DE8B40_AL_RET65496 = 0x80abce8 # add byte ptr [ebp - 0x38de8b40], al ; ret 0xffd8 ;
ADD_BYTE_PTR_EBP_0X38DE8B40_AL_RET65500 = 0x80abd13 # add byte ptr [ebp - 0x38de8b40], al ; ret 0xffdc ;
ADD_BYTE_PTR_EBP_0X38DF8B40_AL_RET49704 = 0x8070263 # add byte ptr [ebp - 0x38df8b40], al ; ret 0xc228 ;
ADD_BYTE_PTR_EBP_0X38E18B2E_AL_RET65488 = 0x80abcc0 # add byte ptr [ebp - 0x38e18b2e], al ; ret 0xffd0 ;
ADD_BYTE_PTR_EBP_0X391174C0_AL_RET55413 = 0x80a320f # add byte ptr [ebp + 0x391174c0], al ; ret 0xd875 ;
ADD_BYTE_PTR_EBP_0X3DBBF040_AL = 0x806ef26 # add byte ptr [ebp - 0x3dbbf040], al ; ret  ;
ADD_BYTE_PTR_EBP_0X7600C7A4_CL_RET11405 = 0x805d0fb # add byte ptr [ebp - 0x7600c7a4], cl ; ret 0x2c8d ;
ADD_BYTE_PTR_EBP_0X7C8B8A25_AL_RET26128 = 0x806adcf # add byte ptr [ebp - 0x7c8b8a25], al ; ret 0x6610 ;
ADD_BYTE_PTR_EBP_0X7E0B8A37_AL = 0x80a63cf # add byte ptr [ebp - 0x7e0b8a37], al ; ret  ;
ADD_BYTE_PTR_EBX_0X14D3DB8C_CL_RET36966 = 0x80939b7 # add byte ptr [ebx - 0x14d3db8c], cl ; ret 0x9066 ;
ADD_BYTE_PTR_EBX_0X366FEF3C_AL = 0x804896a # add byte ptr [ebx - 0x366fef3c], al ; ret  ;
ADD_BYTE_PTR_EBX_0X38EBDB8C_CL_RET0 = 0x8098ea1 # add byte ptr [ebx - 0x38ebdb8c], cl ; ret 0 ;
ADD_BYTE_PTR_EBX_0X38EFDBA4_CL_RET65532 = 0x809f153 # add byte ptr [ebx - 0x38efdba4], cl ; ret 0xfffc ;
ADD_BYTE_PTR_EBX_0X38EFDBB4_CL_RET65532 = 0x809f1a1 # add byte ptr [ebx - 0x38efdbb4], cl ; ret 0xfffc ;
ADD_BYTE_PTR_EBX_0X38F3DB8C_CL_RET49800 = 0x804911c # add byte ptr [ebx - 0x38f3db8c], cl ; ret 0xc288 ;
ADD_BYTE_PTR_EBX_0X38F3DBB4_CL_RET48128 = 0x8048d38 # add byte ptr [ebx - 0x38f3dbb4], cl ; ret 0xbc00 ;
ADD_BYTE_PTR_EBX_0X38F3DBB4_CL_RET49800 = 0x8049130 # add byte ptr [ebx - 0x38f3dbb4], cl ; ret 0xc288 ;
ADD_BYTE_PTR_EBX_0X38FBDBBC_CL_RET48128 = 0x806bfaa # add byte ptr [ebx - 0x38fbdbbc], cl ; ret 0xbc00 ;
ADD_BYTE_PTR_EBX_0X39_DL       = 0x80a155a # add byte ptr [ebx - 0x39], dl ; ret  ;
ADD_BYTE_PTR_EBX_0X420F02F8_AL = 0x8095f02 # add byte ptr [ebx + 0x420f02f8], al ; ret  ;
ADD_BYTE_PTR_EBX_0X440FFFF8_AL_RET50307 = 0x805dddc # add byte ptr [ebx + 0x440ffff8], al ; ret 0xc483 ;
ADD_BYTE_PTR_EBX_0X4C8B01E8_AL_RET34060 = 0x80a2c7f # add byte ptr [ebx + 0x4c8b01e8], al ; ret 0x850c ;
ADD_BYTE_PTR_EBX_0X58C0C728_CL_RET2061 = 0x804941d # add byte ptr [ebx + 0x58c0c728], cl ; ret 0x80d ;
ADD_BYTE_PTR_EBX_0X5E5B04C4_AL = 0x806cf24 # add byte ptr [ebx + 0x5e5b04c4], al ; ret  ;
ADD_BYTE_PTR_EBX_0X5E5B14C4_AL = 0x809e13f # add byte ptr [ebx + 0x5e5b14c4], al ; ret  ;
ADD_BYTE_PTR_EBX_0X5E_BL       = 0x809f190 # add byte ptr [ebx + 0x5e], bl ; ret  ;
ADD_BYTE_PTR_EBX_0X5F0C2444_CL = 0x809214f # add byte ptr [ebx + 0x5f0c2444], cl ; ret  ;
ADD_BYTE_PTR_EBX_0X70F0C003_AL_RET0 = 0x80a7d6f # add byte ptr [ebx - 0x70f0c003], al ; ret 0 ;
ADD_BYTE_PTR_EBX_0X76D7DBB4_CL_RET56055 = 0x804f481 # add byte ptr [ebx - 0x76d7dbb4], cl ; ret 0xdaf7 ;
ADD_BYTE_PTR_EBX_0X76F7DB8C_CL_RET17607 = 0x80787af # add byte ptr [ebx - 0x76f7db8c], cl ; ret 0x44c7 ;
ADD_BYTE_PTR_EBX_0X78F0D501_AL_RET6 = 0x809a982 # add byte ptr [ebx - 0x78f0d501], al ; ret 6 ;
ADD_BYTE_PTR_EBX_0X79F0BF11_AL_RET1 = 0x8091d94 # add byte ptr [ebx - 0x79f0bf11], al ; ret 1 ;
ADD_BYTE_PTR_EBX_0X79F0EF05_AL = 0x805c8d3 # add byte ptr [ebx - 0x79f0ef05], al ; ret  ;
ADD_BYTE_PTR_EBX_0X79F0F608_AL_RET0 = 0x808e214 # add byte ptr [ebx - 0x79f0f608], al ; ret 0 ;
ADD_BYTE_PTR_EBX_0X7BF0FC01_AL_RET0 = 0x80921f2 # add byte ptr [ebx - 0x7bf0fc01], al ; ret 0 ;
ADD_BYTE_PTR_EBX_0X7BF0FF07_AL = 0x806a983 # add byte ptr [ebx - 0x7bf0ff07], al ; ret  ;
ADD_BYTE_PTR_EBX_0X7CACF314_AL = 0x807297f # add byte ptr [ebx - 0x7cacf314], al ; ret  ;
ADD_BYTE_PTR_EBX_0X7CC3DBBC_CL_RET50948 = 0x8078cff # add byte ptr [ebx - 0x7cc3dbbc], cl ; ret 0xc704 ;
ADD_BYTE_PTR_EBX_0X7CF7DBAC_CL_RET14596 = 0x80786a5 # add byte ptr [ebx - 0x7cf7dbac], cl ; ret 0x3904 ;
ADD_BYTE_PTR_EBX_EDX_2_0X7D_DH_RET62977 = 0x8092322 # add byte ptr [ebx + edx*2 - 0x7d], dh ; ret 0xf601 ;
ADD_BYTE_PTR_ECX_0X110245C_CL_RET21641 = 0x807ce7a # add byte ptr [ecx + 0x110245c], cl ; ret 0x5489 ;
ADD_BYTE_PTR_ECX_0X38F3DBA4_CL = 0x806fb28 # add byte ptr [ecx - 0x38f3dba4], cl ; ret  ;
ADD_BYTE_PTR_ECX_0X47EBDBBC_CL_RET0 = 0x8048379 # add byte ptr [ecx - 0x47ebdbbc], cl ; ret 0 ;
ADD_BYTE_PTR_ECX_0X5E5B1814_CL = 0x807c720 # add byte ptr [ecx + 0x5e5b1814], cl ; ret  ;
ADD_BYTE_PTR_ECX_0X5F5E5BF0_CL = 0x80836e9 # add byte ptr [ecx + 0x5f5e5bf0], cl ; ret  ;
ADD_BYTE_PTR_ECX_0X5F5E5BF8_CL = 0x80a15b4 # add byte ptr [ecx + 0x5f5e5bf8], cl ; ret  ;
ADD_BYTE_PTR_ECX_0X763FCF10_CL_RET34697 = 0x8048317 # add byte ptr [ecx - 0x763fcf10], cl ; ret 0x8789 ;
ADD_BYTE_PTR_ECX_0X763FCF28_CL_RET34697 = 0x80482e8 # add byte ptr [ecx - 0x763fcf28], cl ; ret 0x8789 ;
ADD_BYTE_PTR_ECX_0X76FF743A_CL_RET52864 = 0x8093dbf # add byte ptr [ecx - 0x76ff743a], cl ; ret 0xce80 ;
ADD_BYTE_PTR_ECX_0X7CF769B4_CL_RET33537 = 0x80aa2b7 # add byte ptr [ecx - 0x7cf769b4], cl ; ret 0x8301 ;
ADD_BYTE_PTR_ECX_AH_RET9332    = 0x806b858 # add byte ptr [ecx], ah ; ret 0x2474 ;
ADD_BYTE_PTR_ECX_AL_RET1163    = 0x805a209 # add byte ptr [ecx], al ; ret 0x48b ;
ADD_BYTE_PTR_ECX_AL_RET17803   = 0x80860fc # add byte ptr [ecx], al ; ret 0x458b ;
ADD_BYTE_PTR_ECX_AL_RET46863   = 0x80a5ecf # add byte ptr [ecx], al ; ret 0xb70f ;
ADD_BYTE_PTR_ECX_AL_RET49921   = 0x805200b # add byte ptr [ecx], al ; ret 0xc301 ;
ADD_BYTE_PTR_ECX_BH            = 0x809d494 # add byte ptr [ecx], bh ; ret  ;
ADD_BYTE_PTR_ECX_BH_RET17607   = 0x80532f0 # add byte ptr [ecx], bh ; ret 0x44c7 ;
ADD_BYTE_PTR_ECX_BH_RET18191   = 0x809c142 # add byte ptr [ecx], bh ; ret 0x470f ;
ADD_BYTE_PTR_ECX_BH_RET33295   = 0x8090d19 # add byte ptr [ecx], bh ; ret 0x820f ;
ADD_BYTE_PTR_ECX_BH_RET33807   = 0x8059119 # add byte ptr [ecx], bh ; ret 0x840f ;
ADD_BYTE_PTR_ECX_BH_RET34063   = 0x80533ff # add byte ptr [ecx], bh ; ret 0x850f ;
ADD_BYTE_PTR_ECX_BH_RET36111   = 0x80868ea # add byte ptr [ecx], bh ; ret 0x8d0f ;
ADD_BYTE_PTR_ECX_BH_RET3700    = 0x807d0fd # add byte ptr [ecx], bh ; ret 0xe74 ;
ADD_BYTE_PTR_ECX_BH_RET4725    = 0x806f149 # add byte ptr [ecx], bh ; ret 0x1275 ;
ADD_BYTE_PTR_ECX_BH_RET627     = 0x809cbf1 # add byte ptr [ecx], bh ; ret 0x273 ;
ADD_BYTE_PTR_ECX_CH            = 0x8085529 # add byte ptr [ecx], ch ; ret  ;
ADD_BYTE_PTR_ECX_CH_RET1165    = 0x805a567 # add byte ptr [ecx], ch ; ret 0x48d ;
ADD_BYTE_PTR_ECX_CH_RET22901   = 0x8058612 # add byte ptr [ecx], ch ; ret 0x5975 ;
ADD_BYTE_PTR_ECX_CH_RET34792   = 0x804ce21 # add byte ptr [ecx], ch ; ret 0x87e8 ;
ADD_BYTE_PTR_ECX_CH_RET51589   = 0x80873a0 # add byte ptr [ecx], ch ; ret 0xc985 ;
ADD_BYTE_PTR_ECX_CH_RET57129   = 0x8085a72 # add byte ptr [ecx], ch ; ret 0xdf29 ;
ADD_BYTE_PTR_ECX_CH_RET6377    = 0x8082418 # add byte ptr [ecx], ch ; ret 0x18e9 ;
ADD_BYTE_PTR_ECX_CL_RET49269   = 0x809503b # add byte ptr [ecx], cl ; ret 0xc075 ;
ADD_BYTE_PTR_ECX_CL_RET60088   = 0x806ddac # add byte ptr [ecx], cl ; ret 0xeab8 ;
ADD_BYTE_PTR_ECX_DH_RET17545   = 0x806d5f1 # add byte ptr [ecx], dh ; ret 0x4489 ;
ADD_BYTE_PTR_ECX_EDX_0X7D_DH_RET33540 = 0x8092dda # add byte ptr [ecx + edx - 0x7d], dh ; ret 0x8304 ;
ADD_BYTE_PTR_EDX_0X77_DL_RET61577 = 0x8096a16 # add byte ptr [edx - 0x77], dl ; ret 0xf089 ;
ADD_BYTE_PTR_EDX_0X7F_BL_RET6038 = 0x8048869 # add byte ptr [edx - 0x7f], bl ; ret 0x1796 ;
ADD_BYTE_PTR_ESI_0X5F_BL       = 0x80a891f # add byte ptr [esi + 0x5f], bl ; ret  ;
ADD_BYTE_PTR_ESP_EBP_0X39_DH   = 0x804ef62 # add byte ptr [esp + ebp - 0x39], dh ; ret  ;
ADD_BYTE_PTR_ES_EAX_1_BH       = 0x805708e # add byte ptr es:[eax - 1], bh ; ret  ;
ADD_BYTE_PTR_ES_EAX_AL         = 0x806f01c # add byte ptr es:[eax], al ; ret  ;
ADD_BYTE_PTR_ES_EBX_0X4C8B01E8_AL_RET34060 = 0x80a2c7e # add byte ptr es:[ebx + 0x4c8b01e8], al ; ret 0x850c ;
ADD_BYTE_PTR_ES_ECX_0X7CF769B4_CL_RET33537 = 0x80aa2b6 # add byte ptr es:[ecx - 0x7cf769b4], cl ; ret 0x8301 ;
ADD_BYTE_PTR_ES_ECX_BH_RET34063 = 0x80533fe # add byte ptr es:[ecx], bh ; ret 0x850f ;
ADD_DWORD_PTR_0X73950000_ECX_RET72 = 0x80bc7a8 # add dword ptr [0x73950000], ecx ; ret 0x48 ;
ADD_DWORD_PTR_EAX_0X5F028D02_ECX = 0x8066cb1 # add dword ptr [eax + 0x5f028d02], ecx ; ret  ;
ADD_DWORD_PTR_EAX_0X5FF88902_ECX = 0x80666c1 # add dword ptr [eax + 0x5ff88902], ecx ; ret  ;
ADD_DWORD_PTR_EAX_0X5F_EAX     = 0x806af12 # add dword ptr [eax + 0x5f], eax ; ret  ;
ADD_DWORD_PTR_EAX_0X6BF0D006_EAX_RET46607 = 0x806c1da # add dword ptr [eax - 0x6bf0d006], eax ; ret 0xb60f ;
ADD_DWORD_PTR_EAX_EAX          = 0x80571bb # add dword ptr [eax], eax ; ret  ;
ADD_DWORD_PTR_EBP_0X390475C9_EAX = 0x80a0335 # add dword ptr [ebp + 0x390475c9], eax ; ret  ;
ADD_DWORD_PTR_EBP_0X6BF475C0_EAX_RET33596 = 0x80724cf # add dword ptr [ebp + 0x6bf475c0], eax ; ret 0x833c ;
ADD_DWORD_PTR_EBX_0X5E5B04C4_EAX = 0x806c3d8 # add dword ptr [ebx + 0x5e5b04c4], eax ; ret  ;
ADD_DWORD_PTR_EBX_0X5E_EBX     = 0x80a182c # add dword ptr [ebx + 0x5e], ebx ; ret  ;
ADD_DWORD_PTR_EBX_0X69F0FA02_EAX = 0x80769f9 # add dword ptr [ebx - 0x69f0fa02], eax ; ret  ;
ADD_DWORD_PTR_EBX_0X78F0FE08_EAX_RET0 = 0x809f834 # add dword ptr [ebx - 0x78f0fe08], eax ; ret 0 ;
ADD_DWORD_PTR_EBX_0X79F0FE08_EAX = 0x809af75 # add dword ptr [ebx - 0x79f0fe08], eax ; ret  ;
ADD_DWORD_PTR_EBX_0X7CF3DB94_ECX = 0x80a7df3 # add dword ptr [ebx - 0x7cf3db94], ecx ; ret  ;
ADD_DWORD_PTR_ECX_0X291888F2_ECX_RET51769 = 0x809c1f2 # add dword ptr [ecx + 0x291888f2], ecx ; ret 0xca39 ;
ADD_DWORD_PTR_ECX_0X3428D02_ECX = 0x8066e51 # add dword ptr [ecx + 0x3428d02], ecx ; ret  ;
ADD_DWORD_PTR_ECX_0X5B17DBD4_ECX_RET65534 = 0x80702e3 # add dword ptr [ecx - 0x5b17dbd4], ecx ; ret 0xfffe ;
ADD_DWORD_PTR_ECX_0X5FF88902_ECX = 0x80666f1 # add dword ptr [ecx + 0x5ff88902], ecx ; ret  ;
ADD_DWORD_PTR_ECX_0X762176F2_ECX_RET50489 = 0x8074f2a # add dword ptr [ecx - 0x762176f2], ecx ; ret 0xc539 ;
ADD_DWORD_PTR_ECX_0X76EBDBAC_ECX_RET19593 = 0x806beb7 # add dword ptr [ecx - 0x76ebdbac], ecx ; ret 0x4c89 ;
ADD_DWORD_PTR_ECX_0X7CBB81F9_ECX = 0x809fbda # add dword ptr [ecx - 0x7cbb81f9], ecx ; ret  ;
ADD_DWORD_PTR_ECX_0X7CFB6CB4_ECX_RET34049 = 0x809ff26 # add dword ptr [ecx - 0x7cfb6cb4], ecx ; ret 0x8501 ;
ADD_DWORD_PTR_ECX_EAX          = 0x80a7fe7 # add dword ptr [ecx], eax ; ret  ;
ADD_DWORD_PTR_ECX_EBP_RET53385 = 0x807dfc4 # add dword ptr [ecx], ebp ; ret 0xd089 ;
ADD_DWORD_PTR_ECX_ECX_RET20873 = 0x805ba29 # add dword ptr [ecx], ecx ; ret 0x5189 ;
ADD_DWORD_PTR_ECX_ECX_RET5769  = 0x806e70c # add dword ptr [ecx], ecx ; ret 0x1689 ;
ADD_DWORD_PTR_ECX_EDI          = 0x80a0359 # add dword ptr [ecx], edi ; ret  ;
ADD_DWORD_PTR_ECX_EDI_RET1652  = 0x809da8a # add dword ptr [ecx], edi ; ret 0x674 ;
ADD_DWORD_PTR_ECX_EDI_RET18292 = 0x804f83b # add dword ptr [ecx], edi ; ret 0x4774 ;
ADD_DWORD_PTR_ECX_EDI_RET56437 = 0x80a348b # add dword ptr [ecx], edi ; ret 0xdc75 ;
ADD_DWORD_PTR_ECX_EDI_RET57717 = 0x80a56ea # add dword ptr [ecx], edi ; ret 0xe175 ;
ADD_DWORD_PTR_ECX_EDI_RET62581 = 0x8096417 # add dword ptr [ecx], edi ; ret 0xf475 ;
ADD_DWORD_PTR_ECX_EDI_RET62837 = 0x80964f6 # add dword ptr [ecx], edi ; ret 0xf575 ;
ADD_DWORD_PTR_ECX_ESI          = 0x809ba3d # add dword ptr [ecx], esi ; ret  ;
ADD_DWORD_PTR_ECX_ESP_RET27218 = 0x807c493 # add dword ptr [ecx], esp ; ret 0x6a52 ;
ADD_DWORD_PTR_EDX_ECX          = 0x80d34e2 # add dword ptr [edx], ecx ; ret  ;
ADD_WORD_PTR_EDX_CX            = 0x80cef85 # add word ptr [edx], cx ; ret  ;
AND_BYTE_PTR_EAX_0X7BF0FFC6_AL_RET1 = 0x80a5fd6 # and byte ptr [eax - 0x7bf0ffc6], al ; ret 1 ;
AND_BYTE_PTR_EBX_0X5E5B14C4_AL = 0x806d1e7 # and byte ptr [ebx + 0x5e5b14c4], al ; ret  ;
AND_BYTE_PTR_EBX_0X76317700_CL_RET57475 = 0x80781a4 # and byte ptr [ebx - 0x76317700], cl ; ret 0xe083 ;
AND_BYTE_PTR_ECX_0X1202474_CL_RET54585 = 0x8077dc9 # and byte ptr [ecx + 0x1202474], cl ; ret 0xd539 ;
AND_BYTE_PTR_ECX_AH            = 0x8048657 # and byte ptr [ecx], ah ; ret  ;
AND_BYTE_PTR_ECX_AL_RET54585   = 0x8077dcd # and byte ptr [ecx], al ; ret 0xd539 ;
AND_BYTE_PTR_ECX_BH_RET18806   = 0x8049442 # and byte ptr [ecx], bh ; ret 0x4976 ;
AND_BYTE_PTR_ECX_BH_RET20109   = 0x807cedd # and byte ptr [ecx], bh ; ret 0x4e8d ;
AND_BYTE_PTR_ESI_0X36FEF7F3_DH = 0x804883f # and byte ptr [esi - 0x36fef7f3], dh ; ret  ;
AND_BYTE_PTR_ESP_EAX_0X77_DH_RET49201 = 0x809b71d # and byte ptr [esp + eax - 0x77], dh ; ret 0xc031 ;
MOV_BYTE_PTR_0X89145589_AL_RET19849 = 0x80489d0 # mov byte ptr [0x89145589], al ; ret 0x4d89 ;
MOV_BYTE_PTR_0XF6000000_AL_RET29953 = 0x80621ba # mov byte ptr [0xf6000000], al ; ret 0x7501 ;
MOV_DWORD_PTR_0X81FFF9CD_EAX   = 0x80ab9d9 # mov dword ptr [0x81fff9cd], eax ; ret  ;
MOV_DWORD_PTR_0X81FFFAC4_EAX   = 0x809c2d9 # mov dword ptr [0x81fffac4], eax ; ret  ;
MOV_DWORD_PTR_0X81FFFBAF_EAX   = 0x808d7d9 # mov dword ptr [0x81fffbaf], eax ; ret  ;
MOV_DWORD_PTR_0X8B080D_EAX     = 0x80570ed # mov dword ptr [0x8b080d], eax ; ret  ;
MOV_DWORD_PTR_EAX_0X18_EDX     = 0x806f3f0 # mov dword ptr [eax + 0x18], edx ; ret  ;
MOV_DWORD_PTR_EAX_0X1BB0_EDX   = 0x8058001 # mov dword ptr [eax + 0x1bb0], edx ; ret  ;
MOV_DWORD_PTR_EAX_0X20_ECX     = 0x808f5f4 # mov dword ptr [eax + 0x20], ecx ; ret  ;
MOV_DWORD_PTR_EAX_0X4C_EDX     = 0x80a8d58 # mov dword ptr [eax + 0x4c], edx ; ret  ;
MOV_DWORD_PTR_EAX_0X7CC_EDX    = 0x8057af1 # mov dword ptr [eax + 0x7cc], edx ; ret  ;
MOV_DWORD_PTR_EAX_0X7D0_EDX    = 0x8057ad1 # mov dword ptr [eax + 0x7d0], edx ; ret  ;
MOV_DWORD_PTR_EAX_0X7F8_EDX    = 0x8057b51 # mov dword ptr [eax + 0x7f8], edx ; ret  ;
MOV_DWORD_PTR_EAX_0X7FC_EDX    = 0x8057b71 # mov dword ptr [eax + 0x7fc], edx ; ret  ;
MOV_DWORD_PTR_EAX_0X800_EDX    = 0x805c578 # mov dword ptr [eax + 0x800], edx ; ret  ;
MOV_DWORD_PTR_EAX_4_EDX        = 0x8055812 # mov dword ptr [eax + 4], edx ; ret  ;
MOV_DWORD_PTR_EAX_EDX          = 0x809d344 # mov dword ptr [eax], edx ; ret  ;
MOV_DWORD_PTR_ECX_0XB0_EDX     = 0x80504e0 # mov dword ptr [ecx + 0xb0], edx ; ret  ;
MOV_DWORD_PTR_EDX_0X18_EAX     = 0x804e3a3 # mov dword ptr [edx + 0x18], eax ; ret  ;
MOV_DWORD_PTR_EDX_0X7F0_EAX    = 0x8057b2e # mov dword ptr [edx + 0x7f0], eax ; ret  ;
MOV_DWORD_PTR_EDX_EAX          = 0x8056e25 # mov dword ptr [edx], eax ; ret  ;
MOV_WORD_PTR_ECX_GS_RET51075   = 0x8086207 # mov word ptr [ecx], gs ; ret 0xc783 ;
OR_BYTE_PTR_EAX_0X2F76F7BE_CL  = 0x806689c # or byte ptr [eax - 0x2f76f7be], cl ; ret  ;
OR_BYTE_PTR_EBP_0X38BE8113_AL_RET45760 = 0x8083560 # or byte ptr [ebp - 0x38be8113], al ; ret 0xb2c0 ;
OR_BYTE_PTR_EBP_0X7C398A40_AL  = 0x804afa4 # or byte ptr [ebp - 0x7c398a40], al ; ret  ;
OR_BYTE_PTR_EBP_0X7CFFD98C_CL_RET35588 = 0x808e163 # or byte ptr [ebp - 0x7cffd98c], cl ; ret 0x8b04 ;
OR_BYTE_PTR_EBP_0XCF98A37_AL   = 0x80aab6d # or byte ptr [ebp - 0xcf98a37], al ; ret  ;
OR_BYTE_PTR_EBX_0X2938247C_CL_RET21561 = 0x8053cc8 # or byte ptr [ebx + 0x2938247c], cl ; ret 0x5439 ;
OR_BYTE_PTR_EBX_0X2FD6F7BF_CL  = 0x8056e62 # or byte ptr [ebx - 0x2fd6f7bf], cl ; ret  ;
OR_BYTE_PTR_EBX_0X40E4602_AL   = 0x80caad8 # or byte ptr [ebx + 0x40e4602], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E4702_AL   = 0x80ca1e1 # or byte ptr [ebx + 0x40e4702], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E4902_AL   = 0x80c9f73 # or byte ptr [ebx + 0x40e4902], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E5702_AL   = 0x80ca924 # or byte ptr [ebx + 0x40e5702], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E5902_AL   = 0x80d531b # or byte ptr [ebx + 0x40e5902], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E5B02_AL   = 0x80caacf # or byte ptr [ebx + 0x40e5b02], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E6002_AL   = 0x80c9e16 # or byte ptr [ebx + 0x40e6002], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E6202_AL   = 0x80c9e1f # or byte ptr [ebx + 0x40e6202], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E6602_AL   = 0x80ca29d # or byte ptr [ebx + 0x40e6602], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E6902_AL   = 0x80ca98f # or byte ptr [ebx + 0x40e6902], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E6A02_AL   = 0x80ca1bb # or byte ptr [ebx + 0x40e6a02], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E6B02_AL   = 0x80c9e69 # or byte ptr [ebx + 0x40e6b02], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E7002_AL   = 0x80c9e7b # or byte ptr [ebx + 0x40e7002], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E7102_AL   = 0x80c9e45 # or byte ptr [ebx + 0x40e7102], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E7202_AL   = 0x80c9e96 # or byte ptr [ebx + 0x40e7202], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E7302_AL   = 0x80ca294 # or byte ptr [ebx + 0x40e7302], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E7A02_AL   = 0x80c9e8d # or byte ptr [ebx + 0x40e7a02], al ; ret  ;
OR_BYTE_PTR_EBX_0X40E7B02_AL   = 0x80c9eb3 # or byte ptr [ebx + 0x40e7b02], al ; ret  ;
OR_BYTE_PTR_EBX_0X5E5B14C4_AL  = 0x806d075 # or byte ptr [ebx + 0x5e5b14c4], al ; ret  ;
OR_BYTE_PTR_EBX_0X5E5B24C4_AL  = 0x80a47c5 # or byte ptr [ebx + 0x5e5b24c4], al ; ret  ;
OR_BYTE_PTR_EBX_0X5E_BL        = 0x806f370 # or byte ptr [ebx + 0x5e], bl ; ret  ;
OR_BYTE_PTR_EBX_0X5F5E5B02_CL  = 0x808fcf4 # or byte ptr [ebx + 0x5f5e5b02], cl ; ret  ;
OR_BYTE_PTR_EBX_0X70C0C710_CL_RET2061 = 0x8070361 # or byte ptr [ebx + 0x70c0c710], cl ; ret 0x80d ;
OR_BYTE_PTR_EBX_0X76FBDB8C_CL  = 0x8053c51 # or byte ptr [ebx - 0x76fbdb8c], cl ; ret  ;
OR_BYTE_PTR_EBX_0X76FEFBBE_AL_RET57985 = 0x804fff9 # or byte ptr [ebx - 0x76fefbbe], al ; ret 0xe281 ;
OR_BYTE_PTR_EBX_0X7CE976EE_CL  = 0x8088d9e # or byte ptr [ebx - 0x7ce976ee], cl ; ret  ;
OR_BYTE_PTR_EBX_0X9EBDBA4_CL   = 0x805dd08 # or byte ptr [ebx - 0x9ebdba4], cl ; ret  ;
OR_BYTE_PTR_EBX_0XA4A0202_AL   = 0x80ce54f # or byte ptr [ebx + 0xa4a0202], al ; ret  ;
OR_BYTE_PTR_EBX_0XA4C0202_AL   = 0x80d14b3 # or byte ptr [ebx + 0xa4c0202], al ; ret  ;
OR_BYTE_PTR_EBX_0XA6E0202_AL   = 0x80d145b # or byte ptr [ebx + 0xa6e0202], al ; ret  ;
OR_BYTE_PTR_ECX_0X16CBDBBC_CL_RET0 = 0x80977f9 # or byte ptr [ecx - 0x16cbdbbc], cl ; ret 0 ;
OR_BYTE_PTR_ECX_0X290C2444_CL_RET51337 = 0x8083578 # or byte ptr [ecx + 0x290c2444], cl ; ret 0xc889 ;
OR_BYTE_PTR_ECX_0X2F76F7BE_CL  = 0x80668fc # or byte ptr [ecx - 0x2f76f7be], cl ; ret  ;
OR_BYTE_PTR_ECX_0X7CC7DBAC_CL_RET14615 = 0x8086f63 # or byte ptr [ecx - 0x7cc7dbac], cl ; ret 0x3917 ;
OR_BYTE_PTR_ECX_BH             = 0x809bb0c # or byte ptr [ecx], bh ; ret  ;
OR_BYTE_PTR_ECX_CH_RET20562    = 0x804d787 # or byte ptr [ecx], ch ; ret 0x5052 ;
OR_BYTE_PTR_ECX_CH_RET22409    = 0x8099878 # or byte ptr [ecx], ch ; ret 0x5789 ;
OR_BYTE_PTR_ECX_CH_RET2443     = 0x805946e # or byte ptr [ecx], ch ; ret 0x98b ;
OR_BYTE_PTR_ECX_CH_RET30463    = 0x80955f8 # or byte ptr [ecx], ch ; ret 0x76ff ;
OR_BYTE_PTR_ECX_CH_RET55097    = 0x8053da0 # or byte ptr [ecx], ch ; ret 0xd739 ;
OR_BYTE_PTR_EDX_CL             = 0x80cfa6a # or byte ptr [edx], cl ; ret  ;
OR_BYTE_PTR_EDX_EBX_0X7D_DH    = 0x8090bf3 # or byte ptr [edx + ebx - 0x7d], dh ; ret  ;
OR_BYTE_PTR_ESI_0X70_AH        = 0x804823d # or byte ptr [esi - 0x70], ah ; ret  ;
OR_DWORD_PTR_EDX_ECX           = 0x80d1db6 # or dword ptr [edx], ecx ; ret  ;
SUB_BYTE_PTR_EAX_0X76B58AC0_CH_RET63025 = 0x8093969 # sub byte ptr [eax - 0x76b58ac0], ch ; ret 0xf631 ;
SUB_BYTE_PTR_EAX_0XA_DL_RET29953 = 0x809f7c6 # sub byte ptr [eax - 0xa], dl ; ret 0x7501 ;
SUB_BYTE_PTR_EDX_0X77_DL_RET34187 = 0x808a1cc # sub byte ptr [edx - 0x77], dl ; ret 0x858b ;
XCHG_BYTE_PTR_EBX_0XA000000_CL = 0x8057ca8 # xchg byte ptr [ebx - 0xa000000], cl ; ret  ;
XCHG_BYTE_PTR_EDX_CL           = 0x80c9299 # xchg byte ptr [edx], cl ; ret  ;
XCHG_DWORD_PTR_EBP_0X76FFFFFF_EDX_RET59584 = 0x8096af9 # xchg dword ptr [ebp - 0x76ffffff], edx ; ret 0xe8c0 ;
XCHG_DWORD_PTR_ESP_EAX_0X6FA9CE9D_ESP = 0x80c0b2f # xchg dword ptr [esp + eax + 0x6fa9ce9d], esp ; ret  ;
XOR_BYTE_PTR_EAX_0X7BF0DBC6_AL = 0x808dee0 # xor byte ptr [eax - 0x7bf0dbc6], al ; ret  ;
XOR_BYTE_PTR_EBX_0X450FFFF8_CH_RET50163 = 0x805eb0f # xor byte ptr [ebx + 0x450ffff8], ch ; ret 0xc3f3 ;
XOR_BYTE_PTR_EBX_0X5E5B04C4_AL = 0x8090140 # xor byte ptr [ebx + 0x5e5b04c4], al ; ret  ;
XOR_BYTE_PTR_EDX_0X77_DL_RET55433 = 0x80aa93c # xor byte ptr [edx - 0x77], dl ; ret 0xd889 ;
XOR_DWORD_PTR_EAX_EDI_RET11637 = 0x806f5ae # xor dword ptr [eax], edi ; ret 0x2d75 ;

# reg2reg
ADD_AH_BH                      = 0x80c6dc3 # add ah, bh ; ret  ;
ADD_AL_BH_RET40360             = 0x8048c68 # add al, bh ; ret 0x9da8 ;
ADD_AL_CH                      = 0x80a5877 # add al, ch ; ret  ;
ADD_AL_CH_RET291               = 0x804a1c8 # add al, ch ; ret 0x123 ;
ADD_BH_AL                      = 0x80a282f # add bh, al ; ret  ;
ADD_BH_AL_RET0                 = 0x80a3ecf # add bh, al ; ret 0 ;
ADD_BH_AL_RET40360             = 0x8096c15 # add bh, al ; ret 0x9da8 ;
ADD_BH_AL_RET41808             = 0x809d329 # add bh, al ; ret 0xa350 ;
ADD_BH_AL_RET41824             = 0x8056bcf # add bh, al ; ret 0xa360 ;
ADD_BH_AL_RET45760             = 0x809005d # add bh, al ; ret 0xb2c0 ;
ADD_BH_AL_RET45952             = 0x80527c9 # add bh, al ; ret 0xb380 ;
ADD_BH_AL_RET46240             = 0x8050226 # add bh, al ; ret 0xb4a0 ;
ADD_BH_AL_RET46612             = 0x80885dc # add bh, al ; ret 0xb614 ;
ADD_BH_AL_RET48064             = 0x8048c55 # add bh, al ; ret 0xbbc0 ;
ADD_BH_AL_RET49096             = 0x80a2ce7 # add bh, al ; ret 0xbfc8 ;
ADD_BH_AL_RET49632             = 0x809d45c # add bh, al ; ret 0xc1e0 ;
ADD_BH_AL_RET49636             = 0x80a226f # add bh, al ; ret 0xc1e4 ;
ADD_BH_AL_RET49644             = 0x80a2c58 # add bh, al ; ret 0xc1ec ;
ADD_BH_AL_RET65488             = 0x8093cb7 # add bh, al ; ret 0xffd0 ;
ADD_BH_AL_RET65500             = 0x80891eb # add bh, al ; ret 0xffdc ;
ADD_BH_AL_RET65504             = 0x809dc95 # add bh, al ; ret 0xffe0 ;
ADD_BH_AL_RET65516             = 0x805c9c5 # add bh, al ; ret 0xffec ;
ADD_BH_AL_RET65520             = 0x8087b36 # add bh, al ; ret 0xfff0 ;
ADD_BH_AL_RET65532             = 0x809efe6 # add bh, al ; ret 0xfffc ;
ADD_BH_DH_RET0                 = 0x80a08c1 # add bh, dh ; ret 0 ;
ADD_BH_DH_RET15                = 0x805f448 # add bh, dh ; ret 0xf ;
ADD_BH_DH_RET63                = 0x8068175 # add bh, dh ; ret 0x3f ;
ADD_BH_DH_RET63488             = 0x8075c59 # add bh, dh ; ret 0xf800 ;
ADD_BL_DH                      = 0x809d137 # add bl, dh ; ret  ;
ADD_CH_AL_RET390               = 0x8056a28 # add ch, al ; ret 0x186 ;
ADD_CL_AL_RET35081             = 0x807a1f9 # add cl, al ; ret 0x8909 ;
ADD_CL_CH                      = 0x80956cb # add cl, ch ; ret  ;
ADD_CL_CH_RET65532             = 0x804f5d7 # add cl, ch ; ret 0xfffc ;
ADD_DH_BL                      = 0x805212d # add dh, bl ; ret  ;
ADD_DH_DH                      = 0x805cd02 # add dh, dh ; ret  ;
ADD_DH_DH_RET29697             = 0x8083dc7 # add dh, dh ; ret 0x7401 ;
ADD_DH_DH_RET29953             = 0x80621bd # add dh, dh ; ret 0x7501 ;
ADD_DH_DH_RET29956             = 0x808e62f # add dh, dh ; ret 0x7504 ;
ADD_DH_DH_RET29960             = 0x8098902 # add dh, dh ; ret 0x7508 ;
ADD_DH_DH_RET3841              = 0x8067117 # add dh, dh ; ret 0xf01 ;
ADD_DH_DH_RET3842              = 0x8091ed2 # add dh, dh ; ret 0xf02 ;
ADD_DH_DH_RET3844              = 0x8091fee # add dh, dh ; ret 0xf04 ;
ADD_DH_DH_RET3856              = 0x809200f # add dh, dh ; ret 0xf10 ;
ADD_DH_DH_RET3872              = 0x8092018 # add dh, dh ; ret 0xf20 ;
ADD_DH_DH_RET3904              = 0x8092021 # add dh, dh ; ret 0xf40 ;
ADD_DH_DH_RET3920              = 0x8086a1a # add dh, dh ; ret 0xf50 ;
ADD_EAX_ECX                    = 0x80680ff # add eax, ecx ; ret  ;
ADD_EAX_EDX                    = 0x8068263 # add eax, edx ; ret  ;
ADD_EBX_EBP                    = 0x8091100 # add ebx, ebp ; ret  ;
ADD_ECX_EBP_RET65534           = 0x808dd2f # add ecx, ebp ; ret 0xfffe ;
ADD_ECX_ECX                    = 0x8048843 # add ecx, ecx ; ret  ;
ADD_ESI_ESI_RET29955           = 0x8092327 # add esi, esi ; ret 0x7503 ;
ADD_ESI_ESI_RET35073           = 0x80863e8 # add esi, esi ; ret 0x8901 ;
AND_BH_AL_RET45760             = 0x8056104 # and bh, al ; ret 0xb2c0 ;
AND_BH_AL_RET49704             = 0x8070267 # and bh, al ; ret 0xc228 ;
AND_BH_AL_RET65504             = 0x8054f7a # and bh, al ; ret 0xffe0 ;
AND_DH_DH                      = 0x8077477 # and dh, dh ; ret  ;
AND_DH_DH_RET29697             = 0x8048637 # and dh, dh ; ret 0x7401 ;
AND_EDI_EAX_RET30960           = 0x80abe6f # and edi, eax ; ret 0x78f0 ;
AND_EDI_EAX_RET65496           = 0x80abcec # and edi, eax ; ret 0xffd8 ;
AND_EDI_EAX_RET65500           = 0x80abd17 # and edi, eax ; ret 0xffdc ;
MOV_BH_AL_RET49652             = 0x804abfa # mov bh, al ; ret 0xc1f4 ;
MOV_CS_EDI_RET35638            = 0x80c2f48 # mov cs, edi ; ret 0x8b36 ;
MOV_EAX_EDX                    = 0x8067fb0 # mov eax, edx ; ret  ;
MOV_EDI_ES_RET45760            = 0x80851ce # mov edi, es ; ret 0xb2c0 ;
MOV_ESI_EDX                    = 0x806b4bf # mov esi, edx ; ret  ;
MOV_ESP_ECX                    = 0x80a9213 # mov esp, ecx ; ret  ;
OR_BH_AL_RET44260              = 0x80715f5 # or bh, al ; ret 0xace4 ;
OR_BH_AL_RET44328              = 0x80ac21d # or bh, al ; ret 0xad28 ;
OR_BH_AL_RET46612              = 0x80564d1 # or bh, al ; ret 0xb614 ;
OR_BH_AL_RET49096              = 0x80a2cca # or bh, al ; ret 0xbfc8 ;
OR_BH_AL_RET49728              = 0x80a1af9 # or bh, al ; ret 0xc240 ;
OR_BH_AL_RET49740              = 0x80a2600 # or bh, al ; ret 0xc24c ;
OR_BL_CH_RET29837              = 0x8053081 # or bl, ch ; ret 0x748d ;
OR_CL_CH_RET65532              = 0x805e9e0 # or cl, ch ; ret 0xfffc ;
SUB_BH_AL_RET0                 = 0x8097d22 # sub bh, al ; ret 0 ;
SUB_CL_CH_RET65533             = 0x808e01b # sub cl, ch ; ret 0xfffd ;
SUB_DH_DH_RET30016             = 0x8093849 # sub dh, dh ; ret 0x7540 ;
SUB_EAX_ECX                    = 0x8060d41 # sub eax, ecx ; ret  ;
SUB_EAX_EDX                    = 0x80a17ab # sub eax, edx ; ret  ;
XCHG_EAX_EAX_RET65532          = 0x80a64b5 # xchg eax, eax ; ret 0xfffc ;
XCHG_EAX_EBP                   = 0x809b6dc # xchg eax, ebp ; ret  ;
XCHG_EAX_EBP_RET11241          = 0x804bc33 # xchg eax, ebp ; ret 0x2be9 ;
XCHG_EAX_EBP_RET17465          = 0x806d8ce # xchg eax, ebp ; ret 0x4439 ;
XCHG_EAX_EBP_RET17547          = 0x80599a8 # xchg eax, ebp ; ret 0x448b ;
XCHG_EAX_EBP_RET19513          = 0x806d609 # xchg eax, ebp ; ret 0x4c39 ;
XCHG_EAX_EBP_RET22153          = 0x808e6cf # xchg eax, ebp ; ret 0x5689 ;
XCHG_EAX_EBP_RET29417          = 0x8059f31 # xchg eax, ebp ; ret 0x72e9 ;
XCHG_EAX_EBP_RET4233           = 0x80703ae # xchg eax, ebp ; ret 0x1089 ;
XCHG_EAX_EBP_RET46607          = 0x805b651 # xchg eax, ebp ; ret 0xb60f ;
XCHG_EAX_EBP_RET49697          = 0x8089ac5 # xchg eax, ebp ; ret 0xc221 ;
XCHG_EAX_EBP_RET51589          = 0x80a8b27 # xchg eax, ebp ; ret 0xc985 ;
XCHG_EAX_EBP_RET53281          = 0x804e632 # xchg eax, ebp ; ret 0xd021 ;
XCHG_EAX_EBP_RET53892          = 0x804bb63 # xchg eax, ebp ; ret 0xd284 ;
XCHG_EAX_EBP_RET55177          = 0x80a8b2e # xchg eax, ebp ; ret 0xd789 ;
XCHG_EAX_EBP_RET55531          = 0x80707b1 # xchg eax, ebp ; ret 0xd8eb ;
XCHG_EAX_EBP_RET56055          = 0x8050408 # xchg eax, ebp ; ret 0xdaf7 ;
XCHG_EAX_EDI                   = 0x80777b1 # xchg eax, edi ; ret  ;
XCHG_EAX_EDI_RET18921          = 0x805c677 # xchg eax, edi ; ret 0x49e9 ;
XCHG_EAX_EDI_RET21993          = 0x805cdc1 # xchg eax, edi ; ret 0x55e9 ;
XCHG_EAX_EDX_RET53289          = 0x806ed46 # xchg eax, edx ; ret 0xd029 ;
XCHG_EAX_EDX_RET59433          = 0x809f435 # xchg eax, edx ; ret 0xe829 ;
XCHG_EAX_EDX_RET63593          = 0x80c0993 # xchg eax, edx ; ret 0xf869 ;
XCHG_EAX_EDX_RET65532          = 0x809090a # xchg eax, edx ; ret 0xfffc ;
XCHG_EAX_ESI                   = 0x8082d36 # xchg eax, esi ; ret  ;
XCHG_EAX_ESI_RET21514          = 0x8054985 # xchg eax, esi ; ret 0x540a ;
XCHG_EAX_ESI_RET49285          = 0x806c624 # xchg eax, esi ; ret 0xc085 ;
XCHG_EAX_ESI_RET52497          = 0x80c3228 # xchg eax, esi ; ret 0xcd11 ;
XCHG_EAX_ESI_RET53892          = 0x806c677 # xchg eax, esi ; ret 0xd284 ;
XCHG_EAX_ESP                   = 0x80c0fd9 # xchg eax, esp ; ret  ;
XCHG_EAX_ESP_RET19593          = 0x8059f5d # xchg eax, esp ; ret 0x4c89 ;
XCHG_EAX_ESP_RET21538          = 0x806d718 # xchg eax, esp ; ret 0x5422 ;
XCHG_EAX_ESP_RET24380          = 0x805496a # xchg eax, esp ; ret 0x5f3c ;
XCHG_EAX_ESP_RET32572          = 0x808d2cd # xchg eax, esp ; ret 0x7f3c ;
XCHG_EAX_ESP_RET38159          = 0x80a101b # xchg eax, esp ; ret 0x950f ;
XCHG_EAX_ESP_RET4233           = 0x80703d1 # xchg eax, esp ; ret 0x1089 ;
XCHG_EAX_ESP_RET46607          = 0x806c1df # xchg eax, esp ; ret 0xb60f ;
XCHG_EAX_ESP_RET49697          = 0x806da6e # xchg eax, esp ; ret 0xc221 ;
XCHG_EAX_ESP_RET51745          = 0x806d479 # xchg eax, esp ; ret 0xca21 ;
XCHG_EAX_ESP_RET53892          = 0x8049087 # xchg eax, esp ; ret 0xd284 ;
XCHG_EAX_ESP_RET56197          = 0x805ccbb # xchg eax, esp ; ret 0xdb85 ;
XCHG_EAX_ESP_RET58049          = 0x809a7cb # xchg eax, esp ; ret 0xe2c1 ;
XCHG_EAX_ESP_RET59369          = 0x8072ced # xchg eax, esp ; ret 0xe7e9 ;
XCHG_EAX_ESP_RET64009          = 0x8054974 # xchg eax, esp ; ret 0xfa09 ;
XCHG_EAX_ESP_RET65362          = 0x8082381 # xchg eax, esp ; ret 0xff52 ;
XCHG_EAX_ESP_RET65411          = 0x809af23 # xchg eax, esp ; ret 0xff83 ;
XOR_BH_AL                      = 0x807c711 # xor bh, al ; ret  ;
XOR_BH_AL_RET0                 = 0x80a49ef # xor bh, al ; ret 0 ;
XOR_BL_CH_RET19595             = 0x8098801 # xor bl, ch ; ret 0x4c8b ;
XOR_EAX_EAX                    = 0x8092fb0 # xor eax, eax ; ret  ;
XOR_ESI_ESI_RET3841            = 0x8091fdc # xor esi, esi ; ret 0xf01 ;

# syscall
INT80_NORET                    = 0x80c2e83 # int 0x80 ;
SYSCALL_NORET                  = 0x80c3067 # syscall  ;
VSYSCALL                       = 0x80a17e5 # call dword ptr gs:[0x10] ; ret  ;
